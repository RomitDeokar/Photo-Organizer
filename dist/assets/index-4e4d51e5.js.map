{"version":3,"file":"index-4e4d51e5.js","sources":["../../src/components/album-grid.js","../../src/components/photo-uploader.js","../../src/components/photo-grid.js","../../src/db/database.js","../../src/main.js"],"sourcesContent":["export class AlbumGrid {\r\n  constructor(containerId) {\r\n    this.container = document.getElementById(containerId);\r\n    this.albums = [];\r\n    console.log('AlbumGrid initialized with container:', this.container);\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  setupEventListeners() {\r\n    if (!this.container) {\r\n      console.error('Album grid container not found:', this.container);\r\n      return;\r\n    }\r\n\r\n    this.container.addEventListener('click', (e) => {\r\n      console.log('Album grid clicked, target:', e.target);\r\n      const albumCard = e.target.closest('.album-card');\r\n      if (albumCard) {\r\n        console.log('Album card found:', albumCard);\r\n        const albumId = albumCard.dataset.id;\r\n        const album = this.albums.find(a => a.id === albumId);\r\n        if (album) {\r\n          console.log('Dispatching albumClick event for:', album);\r\n          const event = new CustomEvent('albumClick', {\r\n            detail: { album },\r\n            bubbles: true\r\n          });\r\n          this.container.dispatchEvent(event);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  render(albums) {\r\n    this.albums = albums;\r\n    this.container.innerHTML = this.getGroupedAlbumsHTML();\r\n  }\r\n\r\n  getGroupedAlbumsHTML() {\r\n    const grouped = this.groupAlbumsByDate();\r\n    return Object.entries(grouped)\r\n      .map(([date, albums]) => `\r\n        <div class=\"album-group\">\r\n          <h2 class=\"album-group-title\">${date}</h2>\r\n          <div class=\"album-grid\">\r\n            ${albums.map(album => this.getAlbumCardHTML(album)).join('')}\r\n          </div>\r\n        </div>\r\n      `)\r\n      .join('');\r\n  }\r\n\r\n  getAlbumCardHTML(album) {\r\n    const date = new Date(album.created_at);\r\n    const formattedDate = new Intl.DateTimeFormat('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    }).format(date);\r\n\r\n    return `\r\n      <article class=\"album-card\" data-id=\"${album.id}\" role=\"button\" tabindex=\"0\">\r\n        <div class=\"album-cover\">\r\n          <div class=\"album-placeholder\"></div>\r\n        </div>\r\n        <div class=\"album-info\">\r\n          <h3 class=\"album-title\">${album.name}</h3>\r\n          <p class=\"album-date\">${formattedDate}</p>\r\n          <p class=\"album-count\">${album.photo_count || 0} photos</p>\r\n        </div>\r\n      </article>\r\n    `;\r\n  }\r\n\r\n  groupAlbumsByDate() {\r\n    return this.albums.reduce((groups, album) => {\r\n      const date = new Date(album.created_at);\r\n      const monthYear = new Intl.DateTimeFormat('en-US', {\r\n        year: 'numeric',\r\n        month: 'long'\r\n      }).format(date);\r\n\r\n      if (!groups[monthYear]) {\r\n        groups[monthYear] = [];\r\n      }\r\n      groups[monthYear].push(album);\r\n      return groups;\r\n    }, {});\r\n  }\r\n}\r\n","// Photo uploader component\r\nexport class PhotoUploader {\r\n  constructor(containerId, albumId) {\r\n    this.container = document.getElementById(containerId);\r\n    this.albumId = albumId;\r\n    this.setupUploader();\r\n  }\r\n\r\n  setupUploader() {\r\n    this.container.innerHTML = `\r\n      <div class=\"photo-uploader\">\r\n        <div class=\"upload-zone\" id=\"uploadZone\">\r\n          <input type=\"file\" id=\"fileInput\" multiple accept=\"image/*\" class=\"file-input\" />\r\n          <div class=\"upload-message\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"upload-icon\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\r\n            </svg>\r\n            <p>Drop photos here or click to upload</p>\r\n          </div>\r\n        </div>\r\n        <div id=\"uploadProgress\" class=\"upload-progress\"></div>\r\n      </div>\r\n    `;\r\n\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  setupEventListeners() {\r\n    const uploadZone = document.getElementById('uploadZone');\r\n    const fileInput = document.getElementById('fileInput');\r\n\r\n    uploadZone.addEventListener('dragover', (e) => {\r\n      e.preventDefault();\r\n      uploadZone.classList.add('dragover');\r\n    });\r\n\r\n    uploadZone.addEventListener('dragleave', () => {\r\n      uploadZone.classList.remove('dragover');\r\n    });\r\n\r\n    uploadZone.addEventListener('drop', (e) => {\r\n      e.preventDefault();\r\n      uploadZone.classList.remove('dragover');\r\n      const files = e.dataTransfer.files;\r\n      this.handleFiles(files);\r\n    });\r\n\r\n    uploadZone.addEventListener('click', () => {\r\n      fileInput.click();\r\n    });\r\n\r\n    fileInput.addEventListener('change', () => {\r\n      this.handleFiles(fileInput.files);\r\n    });\r\n  }\r\n\r\n  async handleFiles(files) {\r\n    const validFiles = Array.from(files).filter(file => file.type.startsWith('image/'));\r\n    const progressContainer = document.getElementById('uploadProgress');\r\n\r\n    for (const file of validFiles) {\r\n      const progressElement = document.createElement('div');\r\n      progressElement.className = 'progress-item';\r\n      progressElement.innerHTML = `\r\n        <span class=\"filename\">${file.name}</span>\r\n        <div class=\"progress-bar\">\r\n          <div class=\"progress\" style=\"width: 0%\"></div>\r\n        </div>\r\n      `;\r\n      progressContainer.appendChild(progressElement);\r\n\r\n      await this.processAndStorePhoto(file, progressElement);\r\n    }\r\n  }\r\n\r\n  async processAndStorePhoto(file, progressElement) {\r\n    const reader = new FileReader();\r\n    \r\n    reader.onprogress = (e) => {\r\n      if (e.lengthComputable) {\r\n        const progress = (e.loaded / e.total) * 100;\r\n        progressElement.querySelector('.progress').style.width = `${progress}%`;\r\n      }\r\n    };\r\n\r\n    try {\r\n      // Read the file\r\n      const dataUrl = await new Promise((resolve, reject) => {\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = () => reject(reader.error);\r\n        reader.readAsDataURL(file);\r\n      });\r\n\r\n      // Create image element to get dimensions\r\n      const img = new Image();\r\n      const dimensions = await new Promise((resolve) => {\r\n        img.onload = () => resolve({\r\n          width: img.width,\r\n          height: img.height\r\n        });\r\n        img.src = dataUrl;\r\n      });\r\n\r\n      // Create photo object\r\n      const photo = {\r\n        id: crypto.randomUUID(),\r\n        album_id: this.albumId,\r\n        filename: file.name,\r\n        original_filename: file.name,\r\n        mime_type: file.type,\r\n        size: file.size,\r\n        width: dimensions.width,\r\n        height: dimensions.height,\r\n        taken_at: file.lastModified,\r\n        uploaded_at: Date.now(),\r\n        metadata: JSON.stringify({\r\n          lastModified: file.lastModified,\r\n          type: file.type\r\n        }),\r\n        data: dataUrl // Store the image data directly\r\n      };\r\n\r\n      // Dispatch custom event with photo data\r\n      const event = new CustomEvent('photoUploaded', { detail: photo });\r\n      this.container.dispatchEvent(event);\r\n\r\n      progressElement.classList.add('complete');\r\n      setTimeout(() => {\r\n        progressElement.remove();\r\n      }, 2000);\r\n\r\n    } catch (error) {\r\n      console.error('Error processing photo:', error);\r\n      progressElement.classList.add('error');\r\n      progressElement.innerHTML += `<span class=\"error-message\">${error.message}</span>`;\r\n    }\r\n  }\r\n}\r\n","export class PhotoGrid {\r\n  constructor(containerId) {\r\n    this.container = document.getElementById(containerId);\r\n    this.photos = [];\r\n    this.setupEventListeners();\r\n    this.setupModal();\r\n  }\r\n\r\n  setupModal() {\r\n    // Create modal for viewing photos\r\n    const modal = document.createElement('dialog');\r\n    modal.className = 'modal photo-modal';\r\n    modal.innerHTML = `\r\n      <div class=\"photo-modal-content\">\r\n        <img src=\"\" alt=\"\" />\r\n        <div class=\"photo-modal-info\">\r\n          <span class=\"photo-name\"></span>\r\n          <span class=\"photo-date\"></span>\r\n        </div>\r\n        <div class=\"photo-modal-actions\">\r\n          <button class=\"btn btn-text\" data-close-modal>Close</button>\r\n          <button class=\"btn btn-danger\" data-delete-photo>Delete</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n    document.body.appendChild(modal);\r\n    this.modal = modal;\r\n\r\n    // Add event listeners for modal\r\n    modal.querySelector('[data-close-modal]').addEventListener('click', () => {\r\n      modal.close();\r\n    });\r\n\r\n    modal.querySelector('[data-delete-photo]').addEventListener('click', () => {\r\n      if (this.activePhotoId) {\r\n        this.deletePhoto(this.activePhotoId);\r\n        modal.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  setupEventListeners() {\r\n    this.container.addEventListener('click', (e) => {\r\n      const photoCard = e.target.closest('.photo-card');\r\n      if (!photoCard) return;\r\n\r\n      const photoId = photoCard.dataset.id;\r\n      const photo = this.photos.find(p => p.id === photoId);\r\n      if (!photo) return;\r\n\r\n      if (e.target.closest('.delete-button')) {\r\n        this.deletePhoto(photoId);\r\n      } else if (e.target.closest('.view-button') || e.target.closest('img')) {\r\n        this.showPhotoModal(photo);\r\n      }\r\n    });\r\n  }\r\n\r\n  showPhotoModal(photo) {\r\n    this.activePhotoId = photo.id;\r\n    const img = this.modal.querySelector('img');\r\n    img.src = photo.data;\r\n    img.alt = photo.filename;\r\n    this.modal.querySelector('.photo-name').textContent = photo.filename;\r\n    this.modal.querySelector('.photo-date').textContent = this.formatDate(photo.taken_at);\r\n    this.modal.showModal();\r\n  }\r\n\r\n  async deletePhoto(photoId) {\r\n    const event = new CustomEvent('photoDelete', {\r\n      detail: { photoId },\r\n      bubbles: true\r\n    });\r\n    this.container.dispatchEvent(event);\r\n    \r\n    // Remove from local array and re-render\r\n    this.photos = this.photos.filter(p => p.id !== photoId);\r\n    this.render(this.photos);\r\n  }\r\n\r\n  render(photos) {\r\n    this.photos = photos;\r\n    this.container.innerHTML = `\r\n      <div class=\"photo-grid\">\r\n        ${photos.map(photo => this.getPhotoCardHTML(photo)).join('')}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  getPhotoCardHTML(photo) {\r\n    return `\r\n      <div class=\"photo-card\" data-id=\"${photo.id}\">\r\n        <div class=\"photo-wrapper\">\r\n          <img src=\"${photo.data}\" alt=\"${photo.filename}\" loading=\"lazy\" />\r\n          <div class=\"photo-actions\">\r\n            <button class=\"btn btn-icon view-button\" title=\"View photo\">\r\n              <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\">\r\n                <path d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                <path d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\r\n              </svg>\r\n            </button>\r\n            <button class=\"btn btn-icon delete-button\" title=\"Delete photo\">\r\n              <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\">\r\n                <path d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"photo-info\">\r\n          <span class=\"photo-name\">${photo.filename}</span>\r\n          <span class=\"photo-date\">${this.formatDate(photo.taken_at)}</span>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  formatDate(timestamp) {\r\n    return new Date(timestamp).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  }\r\n\r\n  addPhoto(photo) {\r\n    this.photos.push(photo);\r\n    this.render(this.photos);\r\n  }\r\n}\r\n","class Database {\r\n  constructor() {\r\n    this.dbName = 'photoAlbumDB';\r\n    this.version = 1;\r\n    this.db = null;\r\n  }\r\n\r\n  async init() {\r\n    return new Promise((resolve, reject) => {\r\n      const request = indexedDB.open(this.dbName, this.version);\r\n\r\n      request.onerror = () => reject(request.error);\r\n      request.onsuccess = () => {\r\n        this.db = request.result;\r\n        resolve();\r\n      };\r\n\r\n      request.onupgradeneeded = (event) => {\r\n        const db = event.target.result;\r\n\r\n        // Create albums store\r\n        const albumsStore = db.createObjectStore('albums', { keyPath: 'id' });\r\n        albumsStore.createIndex('created_at', 'created_at');\r\n        albumsStore.createIndex('sort_order', 'sort_order');\r\n\r\n        // Create photos store\r\n        const photosStore = db.createObjectStore('photos', { keyPath: 'id' });\r\n        photosStore.createIndex('album_id', 'album_id');\r\n        photosStore.createIndex('taken_at', 'taken_at');\r\n      };\r\n    });\r\n  }\r\n\r\n  async createAlbum(album) {\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['albums'], 'readwrite');\r\n      const store = transaction.objectStore('albums');\r\n      const request = store.add(album);\r\n\r\n      request.onsuccess = () => resolve(album);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  async getAlbums() {\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['albums', 'photos'], 'readonly');\r\n      const albumStore = transaction.objectStore('albums');\r\n      const photoStore = transaction.objectStore('photos');\r\n      const request = albumStore.index('sort_order').getAll();\r\n\r\n      request.onsuccess = async () => {\r\n        const albums = request.result;\r\n        const albumsWithCounts = await Promise.all(\r\n          albums.map(async (album) => {\r\n            const photoCount = await this.getPhotoCount(album.id);\r\n            const firstPhoto = await this.getFirstPhoto(album.id);\r\n            return {\r\n              ...album,\r\n              photo_count: photoCount,\r\n              first_photo_id: firstPhoto?.id\r\n            };\r\n          })\r\n        );\r\n        resolve(albumsWithCounts);\r\n      };\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  async getPhotoCount(albumId) {\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['photos'], 'readonly');\r\n      const store = transaction.objectStore('photos');\r\n      const index = store.index('album_id');\r\n      const request = index.count(albumId);\r\n\r\n      request.onsuccess = () => resolve(request.result);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  async getFirstPhoto(albumId) {\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['photos'], 'readonly');\r\n      const store = transaction.objectStore('photos');\r\n      const index = store.index('album_id');\r\n      const request = index.get(albumId);\r\n\r\n      request.onsuccess = () => resolve(request.result);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  async createPhoto(photo) {\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['photos'], 'readwrite');\r\n      const store = transaction.objectStore('photos');\r\n      const request = store.add(photo);\r\n\r\n      request.onsuccess = () => resolve(photo);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  async getPhotos(albumId) {\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['photos'], 'readonly');\r\n      const store = transaction.objectStore('photos');\r\n      const index = store.index('album_id');\r\n      const request = index.getAll(albumId);\r\n\r\n      request.onsuccess = () => resolve(request.result);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  async deletePhoto(photoId) {\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction(['photos'], 'readwrite');\r\n      const store = transaction.objectStore('photos');\r\n      const request = store.delete(photoId);\r\n\r\n      request.onsuccess = () => resolve();\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n}\r\n\r\nexport const db = new Database();\r\n","import { AlbumGrid } from './components/album-grid.js';\r\nimport { PhotoUploader } from './components/photo-uploader.js';\r\nimport { PhotoGrid } from './components/photo-grid.js';\r\nimport { db } from './db/database.js';\r\n\r\n// Initialize components\r\nconst albumGrid = new AlbumGrid('albumGrid');\r\nconst createAlbumDialog = document.getElementById('createAlbumDialog');\r\nconst createAlbumForm = document.getElementById('createAlbumForm');\r\nconst albumsView = document.getElementById('albumsView');\r\nconst albumView = document.getElementById('albumView');\r\nconst backToAlbumsBtn = document.getElementById('backToAlbums');\r\nconst albumTitle = document.getElementById('albumTitle');\r\nconst photoUploaderContainer = document.getElementById('photoUploader');\r\nconst photoGridContainer = document.getElementById('photoGrid');\r\n\r\nlet currentAlbum = null;\r\nlet photoUploader = null;\r\nlet photoGrid = null;\r\n\r\n// Initialize database\r\nawait db.init();\r\n\r\n// Load and display albums\r\nasync function loadAlbums() {\r\n  const albums = await db.getAlbums();\r\n  albumGrid.render(albums);\r\n}\r\n\r\n// Create album form handling\r\ndocument.getElementById('createAlbumBtn').addEventListener('click', () => {\r\n  createAlbumDialog.showModal();\r\n});\r\n\r\ndocument.querySelector('[data-close-modal]').addEventListener('click', () => {\r\n  createAlbumDialog.close();\r\n});\r\n\r\ncreateAlbumForm.addEventListener('submit', async (e) => {\r\n  e.preventDefault();\r\n  \r\n  const formData = new FormData(e.target);\r\n  const now = Date.now();\r\n  const album = {\r\n    id: crypto.randomUUID(),\r\n    name: formData.get('name'),\r\n    description: formData.get('description'),\r\n    created_at: now,\r\n    updated_at: now,\r\n    sort_order: (await db.getAlbums()).length\r\n  };\r\n  \r\n  await db.createAlbum(album);\r\n  createAlbumDialog.close();\r\n  createAlbumForm.reset();\r\n  await loadAlbums();\r\n});\r\n\r\n// Album view handling\r\ndocument.addEventListener('albumClick', (e) => {\r\n  console.log('Album clicked:', e.detail.album);\r\n  showAlbumView(e.detail.album);\r\n});\r\n\r\nbackToAlbumsBtn?.addEventListener('click', () => {\r\n  console.log('Back to albums clicked');\r\n  showAlbumsView();\r\n});\r\n\r\nfunction showAlbumView(album) {\r\n  currentAlbum = album;\r\n  albumTitle.textContent = album.name;\r\n  albumsView.style.display = 'none';\r\n  albumView.style.display = 'block';\r\n  backToAlbumsBtn.style.display = 'block';\r\n\r\n  // Initialize PhotoUploader and PhotoGrid if not already initialized\r\n  if (!photoUploader) {\r\n    photoUploader = new PhotoUploader('photoUploader', album.id);\r\n    photoUploaderContainer.addEventListener('photoUploaded', async (e) => {\r\n      await db.createPhoto(e.detail);\r\n      photoGrid.addPhoto(e.detail);\r\n    });\r\n  }\r\n\r\n  if (!photoGrid) {\r\n    photoGrid = new PhotoGrid('photoGrid');\r\n  }\r\n\r\n  // Load photos for this album\r\n  loadAlbumPhotos(album.id);\r\n}\r\n\r\nfunction showAlbumsView() {\r\n  currentAlbum = null;\r\n  albumsView.style.display = 'block';\r\n  albumView.style.display = 'none';\r\n  backToAlbumsBtn.style.display = 'none';\r\n  loadAlbums();\r\n}\r\n\r\nasync function loadAlbumPhotos(albumId) {\r\n  const photos = await db.getPhotos(albumId);\r\n  photoGrid.render(photos);\r\n}\r\n\r\n// Initial load\r\nawait loadAlbums();\r\n"],"names":["AlbumGrid","containerId","e","albumCard","albumId","album","a","event","albums","grouped","date","formattedDate","groups","monthYear","PhotoUploader","uploadZone","fileInput","files","validFiles","file","progressContainer","progressElement","reader","progress","dataUrl","resolve","reject","img","dimensions","photo","error","PhotoGrid","modal","photoCard","photoId","p","photos","timestamp","Database","request","db","albumsStore","photosStore","transaction","albumStore","albumsWithCounts","photoCount","firstPhoto","albumGrid","createAlbumDialog","createAlbumForm","albumsView","albumView","backToAlbumsBtn","albumTitle","photoUploaderContainer","photoUploader","photoGrid","loadAlbums","formData","now","showAlbumView","showAlbumsView","loadAlbumPhotos"],"mappings":"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"}